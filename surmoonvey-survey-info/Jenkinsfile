pipeline {
    environment { 
        //docker hub id와 repository 이름
        repository = "sswon314/surmoonvey-info"  
        
        // jenkins에 등록해 놓은 docker hub credentials 이름
        DOCKERHUB_CREDENTIALS = credentials('docker-hub') 
    }
    
    agent any
    
    stages{
        stage("Prepare"){
            steps {
                // 깃랩의 브랜치, 깃랩 사용자credential정보, 깃랩 프로젝트 url (스크립트 아래쪽 Pipeline Syntax에서 설정으로 해당 스크립트 가져올 수 있음)
                git branch: 'main', credentialsId: 'gitlab', url: 'http://210.109.61.217:10013/gitlab-instance-512c489f/surmoonvey-survey-info.git'
            }
        }
        stage('Test') {
            steps{
                sh "chmod 775 ./mvnw"
                sh "./mvnw test"
            }
        }
        stage('Build') {
            steps{
                sh "./mvnw clean package"
            }
        }
        stage('Image Build') {
            steps{
                sh "docker build -t $repository:$BUILD_NUMBER ."
            }
        }
        stage('Container Run') {
            steps{
                sh "docker run -d -it -p 8082:8082 --name info $repository:$BUILD_NUMBER"
            }
        }
        stage("Image Push") {
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh "docker push $repository:$BUILD_NUMBER"
            }
        }
        stage('Container Remove') {
            steps{
                sh "docker stop info"
                sh "docker rm info"
                sh "docker rmi $repository:$BUILD_NUMBER"
            }
        }
        stage('Trigger Manifest Update') {
            steps{
                build job: 'Update-Manifest', parameters: [string(name: 'DOCKERTAG', value: env.BUILD_NUMBER),string(name: 'REPOSITORY',value: repository)]
            }
        }
    }
}